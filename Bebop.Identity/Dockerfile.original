# См. статью по ссылке https://aka.ms/customizecontainer, чтобы узнать как настроить контейнер отладки и как Visual Studio использует этот Dockerfile для создания образов для ускорения отладки.

# Этот этап используется при запуске из VS в быстром режиме (по умолчанию для конфигурации отладки)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER $APP_UID
WORKDIR /app
EXPOSE 8081


# Этот этап используется для сборки проекта службы
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["Bebop.Identity/IdentityServer.csproj", "Bebop.Identity/"]
RUN dotnet restore "./Bebop.Identity/IdentityServer.csproj" --verbosity detailed --no-cache --ignore-failed-sources
COPY . .
WORKDIR "/src/Bebop.Identity"
RUN dotnet build "IdentityServer.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Этот этап используется для публикации проекта службы, который будет скопирован на последний этап
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "IdentityServer.csproj" -c $BUILD_CONFIGURATION -o /app/publish

# Этот этап используется в рабочей среде или при запуске из VS в обычном режиме (по умолчанию, когда конфигурация отладки не используется)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
COPY Bebop.Identity/certs/identity.crt /https/identity.crt
COPY Bebop.Identity/certs/identity.key /https/identity.key

# Установка переменных окружения для HTTPS
ENV ASPNETCORE_URLS=https://+:8081
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/https/identity.crt
ENV ASPNETCORE_Kestrel__Certificates__Default__KeyPath=/https/identity.key

ENTRYPOINT ["dotnet", "IdentityServer.dll"]